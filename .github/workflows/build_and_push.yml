name: Docker Image CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and Push Docker Images
        run: |
          docker-compose build
          docker-compose push

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@13.51.206.218 << 'EOF'
            cd /home/ubuntu/my-docker-compose-project || git clone https://github.com/WAIL1221/CI_CD.git my-docker-compose-project && cd my-docker-compose-project

            # Stop running containers
            sudo docker-compose down

            # Pull the latest changes
            git pull

            # Ensure entrypoint scripts are executable
            find . -name "*.sh" -exec chmod +x {} \;

            # Pull the latest images from Docker Hub
            sudo docker-compose pull

            # Run Docker Compose
            sudo docker-compose up -d --remove-orphans

            # Run Laravel artisan commands
            sudo docker-compose exec backend composer install --no-dev --optimize-autoloader
            sudo docker-compose exec backend php artisan key:generate
            sudo docker-compose exec backend php artisan migrate --force
            sudo docker-compose exec backend php artisan db:seed --force
            sudo docker-compose exec backend php artisan config:cache
            sudo docker-compose exec backend php artisan route:cache
            sudo docker-compose exec backend php artisan view:cache

            # Clean up dangling images
            sudo docker system prune -af

            # List running containers
            sudo docker ps
          EOF
