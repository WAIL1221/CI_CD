{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport NavBar from \"@/components/NavBar.vue\";\nimport axios from \"@/axios\";\naxios.defaults.withCredentials = true;\nasync function getCSRFToken() {\n  try {\n    await axios.get('/sanctum/csrf-cookie');\n  } catch (error) {\n    console.error('Failed to fetch CSRF token:', error);\n  }\n}\nexport default {\n  name: 'SignUp',\n  components: {\n    NavBar\n  },\n  data() {\n    return {\n      user: {\n        name: '',\n        email: '',\n        password: '',\n        password_confirmation: ''\n      },\n      emailError: '',\n      passwordError: '',\n      passwordConfirmationError: ''\n    };\n  },\n  methods: {\n    validateEmail() {\n      const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      if (!re.test(this.user.email)) {\n        this.emailError = 'Veuillez entrer un email valide';\n      } else {\n        this.emailError = '';\n      }\n    },\n    validatePassword() {\n      if (this.user.password.length < 8) {\n        this.passwordError = 'Le mot de passe doit contenir au moins 8 caractères';\n      } else {\n        this.passwordError = '';\n      }\n    },\n    validatePasswordConfirmation() {\n      if (this.user.password !== this.user.password_confirmation) {\n        this.passwordConfirmationError = 'Les mots de passe ne correspondent pas';\n      } else {\n        this.passwordConfirmationError = '';\n      }\n    },\n    async submitForm() {\n      this.validateEmail();\n      this.validatePassword();\n      this.validatePasswordConfirmation();\n      if (this.emailError || this.passwordError || this.passwordConfirmationError) {\n        return;\n      }\n      try {\n        await getCSRFToken();\n        const response = await axios.post('/api/register-parent', this.user);\n        alert('Inscription réussie!');\n        console.log(response.data);\n        this.$router.push('/signin');\n      } catch (error) {\n        console.error('Erreur lors de l\\'inscription:', error);\n        alert(error.response?.data?.message || 'Erreur inconnue');\n      }\n    }\n  }\n};","map":{"version":3,"names":["NavBar","axios","defaults","withCredentials","getCSRFToken","get","error","console","name","components","data","user","email","password","password_confirmation","emailError","passwordError","passwordConfirmationError","methods","validateEmail","re","test","validatePassword","length","validatePasswordConfirmation","submitForm","response","post","alert","log","$router","push","message"],"sources":["C:\\Users\\AL AZAMI\\Desktop\\frontend\\src\\components\\SignUp.vue"],"sourcesContent":["<template>\r\n  <NavBar />\r\n  <div class=\"sign-up\">\r\n    <h1>Inscription</h1>\r\n    <form @submit.prevent=\"submitForm\">\r\n\r\n      <div>\r\n        <label for=\"name\">Nom d'utilisateur</label>\r\n        <input type=\"text\" id=\"name\" v-model=\"user.name\" required>\r\n      </div>\r\n\r\n      <div>\r\n        <label for=\"email\">Email:</label>\r\n        <input type=\"email\" id=\"email\" v-model=\"user.email\"  @blur=\"validateEmail\" required>\r\n        <span v-if=\"emailError\" class=\"error\">{{ emailError }}</span>\r\n      </div>\r\n\r\n      <div>\r\n        <label for=\"password\">Mot de passe:</label>\r\n        <input type=\"password\" id=\"password\" v-model=\"user.password\" @blur=\"validatePassword\" required>\r\n        <span v-if=\"passwordError\" class=\"error\">{{ passwordError }}</span>\r\n      </div>\r\n\r\n      <div>\r\n        <label for=\"password_confirmation\">Confirmer le mot de passe :</label>\r\n        <input type=\"password\" id=\"password_confirmation\" v-model=\"user.password_confirmation\" @blur=\"validatePasswordConfirmation\" required>\r\n        <span v-if=\"passwordConfirmationError\" class=\"error\">{{ passwordConfirmationError }}</span>\r\n      </div>\r\n\r\n      <div>\r\n        <button type=\"submit\">S'inscrire</button>\r\n      </div>\r\n\r\n      <p class=\"already-registered\">Déjà inscrit ? <router-link to=\"/signin\">Connectez-vous</router-link></p>\r\n\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport NavBar from \"@/components/NavBar.vue\";\r\nimport axios from \"@/axios\";\r\n\r\naxios.defaults.withCredentials = true;\r\n\r\nasync function getCSRFToken() {\r\n    try {\r\n        await axios.get('/sanctum/csrf-cookie');\r\n    } catch (error) {\r\n        console.error('Failed to fetch CSRF token:', error);\r\n    }\r\n}\r\n\r\nexport default {\r\n  name: 'SignUp',\r\n  components: { NavBar },\r\n  data() {\r\n    return {\r\n      user: {\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password_confirmation: '',\r\n      },\r\n      emailError: '',\r\n      passwordError: '',\r\n      passwordConfirmationError: ''\r\n    };\r\n  },\r\n  methods: {\r\n    validateEmail() {\r\n      const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n      if (!re.test(this.user.email)) {\r\n        this.emailError = 'Veuillez entrer un email valide';\r\n      } else {\r\n        this.emailError = '';\r\n      }\r\n    },\r\n    validatePassword() {\r\n      if (this.user.password.length < 8) {\r\n        this.passwordError = 'Le mot de passe doit contenir au moins 8 caractères';\r\n      } else {\r\n        this.passwordError = '';\r\n      }\r\n    },\r\n    validatePasswordConfirmation() {\r\n      if (this.user.password !== this.user.password_confirmation) {\r\n        this.passwordConfirmationError = 'Les mots de passe ne correspondent pas';\r\n      } else {\r\n        this.passwordConfirmationError = '';\r\n      }\r\n    },\r\n    async submitForm() {\r\n      this.validateEmail();\r\n      this.validatePassword();\r\n      this.validatePasswordConfirmation();\r\n      if (this.emailError || this.passwordError || this.passwordConfirmationError) {\r\n        return;\r\n      }\r\n\r\n      try {\r\n        await getCSRFToken();\r\n        const response = await axios.post('/api/register-parent', this.user);\r\n        alert('Inscription réussie!');\r\n        console.log(response.data);\r\n        this.$router.push('/signin');\r\n      } catch (error) {\r\n        console.error('Erreur lors de l\\'inscription:', error);\r\n        alert(error.response?.data?.message || 'Erreur inconnue');\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.sign-up {\r\n  max-width: 350px;\r\n  margin: 40px auto;\r\n  padding: 25px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n  border-radius: 8px;\r\n  background-color: #f8f9fa;\r\n}\r\n\r\nh1 {\r\n  text-align: center;\r\n  color: #333;\r\n  margin-bottom: 20px;\r\n}\r\n\r\nlabel {\r\n  display: block;\r\n  margin-bottom: 5px;\r\n  color: #333;\r\n  font-weight: 600;\r\n}\r\n\r\ninput[type=\"text\"],\r\ninput[type=\"email\"],\r\ninput[type=\"password\"] {\r\n  width: 100%;\r\n  padding: 10px;\r\n  margin-bottom: 20px;\r\n  border: 2px solid transparent;\r\n  border-radius: 4px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  transition: border-color 0.2s, box-shadow 0.2s;\r\n}\r\n\r\ninput[type=\"text\"]:focus,\r\ninput[type=\"email\"]:focus,\r\ninput[type=\"password\"]:focus {\r\n  border-color: #3498db;\r\n  box-shadow: 0 2px 4px rgba(50, 150, 250, 0.5);\r\n}\r\n\r\nbutton {\r\n  padding: 10px 20px;\r\n  border: none;\r\n  background-color: #3498db;\r\n  color: white;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  width: 100%;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\r\n  transition: background-color 0.3s, box-shadow 0.3s;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #2980b9;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);\r\n}\r\n\r\nbutton:active {\r\n  background-color: #2575b5;\r\n}\r\n\r\n.already-registered {\r\n  text-align: center;\r\n  margin-top: 15px;\r\n  color: #666;\r\n}\r\n\r\n.already-registered a {\r\n  color: #2980b9;\r\n  text-decoration: none;\r\n}\r\n\r\n.already-registered a:hover {\r\n  text-decoration: underline;\r\n}\r\n\r\n.error {\r\n  color: red;\r\n  font-size: 0.9em;\r\n}\r\n</style>\r\n"],"mappings":";AAwCA,OAAOA,MAAK,MAAO,yBAAyB;AAC5C,OAAOC,KAAI,MAAO,SAAS;AAE3BA,KAAK,CAACC,QAAQ,CAACC,eAAc,GAAI,IAAI;AAErC,eAAeC,YAAYA,CAAA,EAAG;EAC1B,IAAI;IACA,MAAMH,KAAK,CAACI,GAAG,CAAC,sBAAsB,CAAC;EAC3C,EAAE,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;EACvD;AACJ;AAEA,eAAe;EACbE,IAAI,EAAE,QAAQ;EACdC,UAAU,EAAE;IAAET;EAAO,CAAC;EACtBU,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE;QACJH,IAAI,EAAE,EAAE;QACRI,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE,EAAE;QACZC,qBAAqB,EAAE;MACzB,CAAC;MACDC,UAAU,EAAE,EAAE;MACdC,aAAa,EAAE,EAAE;MACjBC,yBAAyB,EAAE;IAC7B,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,aAAaA,CAAA,EAAG;MACd,MAAMC,EAAC,GAAI,4BAA4B;MACvC,IAAI,CAACA,EAAE,CAACC,IAAI,CAAC,IAAI,CAACV,IAAI,CAACC,KAAK,CAAC,EAAE;QAC7B,IAAI,CAACG,UAAS,GAAI,iCAAiC;MACrD,OAAO;QACL,IAAI,CAACA,UAAS,GAAI,EAAE;MACtB;IACF,CAAC;IACDO,gBAAgBA,CAAA,EAAG;MACjB,IAAI,IAAI,CAACX,IAAI,CAACE,QAAQ,CAACU,MAAK,GAAI,CAAC,EAAE;QACjC,IAAI,CAACP,aAAY,GAAI,qDAAqD;MAC5E,OAAO;QACL,IAAI,CAACA,aAAY,GAAI,EAAE;MACzB;IACF,CAAC;IACDQ,4BAA4BA,CAAA,EAAG;MAC7B,IAAI,IAAI,CAACb,IAAI,CAACE,QAAO,KAAM,IAAI,CAACF,IAAI,CAACG,qBAAqB,EAAE;QAC1D,IAAI,CAACG,yBAAwB,GAAI,wCAAwC;MAC3E,OAAO;QACL,IAAI,CAACA,yBAAwB,GAAI,EAAE;MACrC;IACF,CAAC;IACD,MAAMQ,UAAUA,CAAA,EAAG;MACjB,IAAI,CAACN,aAAa,CAAC,CAAC;MACpB,IAAI,CAACG,gBAAgB,CAAC,CAAC;MACvB,IAAI,CAACE,4BAA4B,CAAC,CAAC;MACnC,IAAI,IAAI,CAACT,UAAS,IAAK,IAAI,CAACC,aAAY,IAAK,IAAI,CAACC,yBAAyB,EAAE;QAC3E;MACF;MAEA,IAAI;QACF,MAAMb,YAAY,CAAC,CAAC;QACpB,MAAMsB,QAAO,GAAI,MAAMzB,KAAK,CAAC0B,IAAI,CAAC,sBAAsB,EAAE,IAAI,CAAChB,IAAI,CAAC;QACpEiB,KAAK,CAAC,sBAAsB,CAAC;QAC7BrB,OAAO,CAACsB,GAAG,CAACH,QAAQ,CAAChB,IAAI,CAAC;QAC1B,IAAI,CAACoB,OAAO,CAACC,IAAI,CAAC,SAAS,CAAC;MAC9B,EAAE,OAAOzB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;QACtDsB,KAAK,CAACtB,KAAK,CAACoB,QAAQ,EAAEhB,IAAI,EAAEsB,OAAM,IAAK,iBAAiB,CAAC;MAC3D;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}