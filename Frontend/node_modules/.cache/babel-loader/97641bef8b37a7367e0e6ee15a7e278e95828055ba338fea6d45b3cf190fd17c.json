{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport NavBar from \"@/components/NavBar.vue\";\nimport axios from \"@/axios\";\naxios.defaults.withCredentials = true;\naxios.defaults.withXSRFToken = true;\nasync function getCSRFToken() {\n  try {\n    await axios.get('/sanctum/csrf-cookie');\n  } catch (error) {\n    console.error('Failed to fetch CSRF token:', error);\n  }\n}\nexport default {\n  name: 'SignIn',\n  components: {\n    NavBar\n  },\n  data() {\n    return {\n      user: {\n        email: '',\n        password: ''\n      },\n      emailError: '',\n      passwordError: ''\n    };\n  },\n  methods: {\n    validateEmail() {\n      const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      if (!re.test(this.user.email)) {\n        this.emailError = 'Veuillez entrer un email valide';\n      } else {\n        this.emailError = '';\n      }\n    },\n    validatePassword() {\n      if (this.user.password.length < 8) {\n        this.passwordError = 'Le mot de passe doit contenir au moins 8 caractères';\n      } else {\n        this.passwordError = '';\n      }\n    },\n    submitForm() {\n      this.validateEmail();\n      this.validatePassword();\n      if (this.emailError || this.passwordError) {\n        return;\n      }\n      getCSRFToken().then(() => {\n        axios.post('/api/login', this.user).then(response => {\n          const token = response.data.token;\n\n          // // document.cookie = 'auth_token=' + token + '; HttpOnly';// quand ajouter HttpOnly la token pas voir dans cookies\n          // localStorage.setItem('auth_token', response.data.token);\n          axios.defaults.headers.common[`Authorization`] = `Bearer ${token}`;\n          alert('Connexion réussie!');\n          this.$router.push('/offerspage');\n        }).catch(error => {\n          console.error('Erreur de connexion:', error);\n          alert(error.response.data.message);\n        });\n      });\n    }\n  }\n};","map":{"version":3,"names":["NavBar","axios","defaults","withCredentials","withXSRFToken","getCSRFToken","get","error","console","name","components","data","user","email","password","emailError","passwordError","methods","validateEmail","re","test","validatePassword","length","submitForm","then","post","response","token","headers","common","alert","$router","push","catch","message"],"sources":["C:\\Users\\AL AZAMI\\Desktop\\full project\\Plateforme_Activites\\Frontend\\src\\components\\SignIn.vue"],"sourcesContent":["<template>\r\n  <NavBar />\r\n  <div class=\"sign-in\">\r\n    <h1>Connexion</h1>\r\n    <form @submit.prevent=\"submitForm\">\r\n      <div>\r\n        <label for=\"email\">Email:</label>\r\n        <input type=\"email\" id=\"email\" v-model=\"user.email\" @blur=\"validateEmail\" required>\r\n        <span v-if=\"emailError\" class=\"error\">{{ emailError }}</span>\r\n      </div>\r\n      <div>\r\n        <label for=\"password\">Mot de passe:</label>\r\n        <input type=\"password\" id=\"password\" v-model=\"user.password\" @blur=\"validatePassword\" required>\r\n        <span v-if=\"passwordError\" class=\"error\">{{ passwordError }}</span>\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">Se connecter</button>\r\n      </div>\r\n    </form>\r\n    <p class=\"forgot-password\">\r\n      <router-link to=\"/forgetpassword\">Mot de passe oublié ?</router-link>\r\n    </p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport NavBar from \"@/components/NavBar.vue\";\r\nimport axios from \"@/axios\";\r\naxios.defaults.withCredentials = true;\r\naxios.defaults.withXSRFToken = true;\r\n\r\nasync function getCSRFToken() {\r\n    try {\r\n        await axios.get('/sanctum/csrf-cookie');\r\n\r\n    } catch (error) {\r\n        console.error('Failed to fetch CSRF token:', error);\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default {\r\n  name: 'SignIn',\r\n  components: {\r\n    NavBar\r\n  },\r\n  data() {\r\n    return {\r\n      user: {\r\n        email: '',\r\n        password: ''\r\n      },\r\n      emailError: '',\r\n      passwordError: ''\r\n    };\r\n  },\r\n  methods: {\r\n    validateEmail() {\r\n      const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n      if (!re.test(this.user.email)) {\r\n        this.emailError = 'Veuillez entrer un email valide';\r\n      } else {\r\n        this.emailError = '';\r\n      }\r\n    },\r\n    validatePassword() {\r\n      if (this.user.password.length < 8) {\r\n        this.passwordError = 'Le mot de passe doit contenir au moins 8 caractères';\r\n      } else {\r\n        this.passwordError = '';\r\n      }\r\n    },\r\n    submitForm() {\r\n      this.validateEmail();\r\n      this.validatePassword();\r\n      if (this.emailError || this.passwordError) {\r\n        return;\r\n      }\r\n      getCSRFToken().then(()=>{\r\n\r\n\r\n          axios.post('/api/login', this.user).then(response => {\r\n\r\n          const token = response.data.token;\r\n\r\n          // // document.cookie = 'auth_token=' + token + '; HttpOnly';// quand ajouter HttpOnly la token pas voir dans cookies\r\n          // localStorage.setItem('auth_token', response.data.token);\r\n          axios.defaults.headers.common[`Authorization`] = `Bearer ${token}`;\r\n          \r\n          alert('Connexion réussie!');\r\n          this.$router.push('/offerspage');\r\n          })\r\n          .catch(error => {\r\n          console.error('Erreur de connexion:', error);\r\n          alert(error.response.data.message);\r\n          });\r\n\r\n\r\n      })\r\n\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.sign-in {\r\n  max-width: 350px;\r\n  margin: 40px auto;\r\n  padding: 25px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n  border-radius: 8px;\r\n  background-color: #f8f9fa;\r\n}\r\n\r\nh1 {\r\n  text-align: center;\r\n  color: #333;\r\n  margin-bottom: 20px;\r\n}\r\n\r\nlabel {\r\n  display: block;\r\n  margin-bottom: 5px;\r\n  color: #333;\r\n  font-weight: 600;\r\n}\r\n\r\ninput[type=\"text\"],\r\ninput[type=\"email\"],\r\ninput[type=\"password\"] {\r\n  width: 100%;\r\n  padding: 10px;\r\n  margin-bottom: 20px;\r\n  border: 2px solid transparent;\r\n  border-radius: 4px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  transition: border-color 0.2s, box-shadow 0.2s;\r\n  box-sizing: border-box;\r\n}\r\n\r\ninput[type=\"text\"]:focus,\r\ninput[type=\"email\"]:focus,\r\ninput[type=\"password\"]:focus {\r\n  border-color: #3498db;\r\n  box-shadow: 0 2px 4px rgba(50, 150, 250, 0.5);\r\n}\r\n\r\nbutton {\r\n  padding: 10px 20px;\r\n  border: none;\r\n  background-color: #3498db;\r\n  color: white;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  width: 100%;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\r\n  transition: background-color 0.3s, box-shadow 0.3s;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #2980b9;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);\r\n}\r\n\r\nbutton:active {\r\n  background-color: #2575b5;\r\n}\r\n\r\n.forgot-password {\r\n  text-align: center;\r\n  margin-top: 15px;\r\n  color: #666;\r\n}\r\n\r\n.forgot-password a {\r\n  color: #2980b9;\r\n  text-decoration: none;\r\n}\r\n\r\n.forgot-password a:hover {\r\n  text-decoration: underline;\r\n}\r\n\r\n.error {\r\n  color: red;\r\n  font-size: 0.9em;\r\n}\r\n</style>"],"mappings":";AA0BA,OAAOA,MAAK,MAAO,yBAAyB;AAC5C,OAAOC,KAAI,MAAO,SAAS;AAC3BA,KAAK,CAACC,QAAQ,CAACC,eAAc,GAAI,IAAI;AACrCF,KAAK,CAACC,QAAQ,CAACE,aAAY,GAAI,IAAI;AAEnC,eAAeC,YAAYA,CAAA,EAAG;EAC1B,IAAI;IACA,MAAMJ,KAAK,CAACK,GAAG,CAAC,sBAAsB,CAAC;EAE3C,EAAE,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;EACvD;AACJ;AAIA,eAAe;EACbE,IAAI,EAAE,QAAQ;EACdC,UAAU,EAAE;IACVV;EACF,CAAC;EACDW,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE;QACJC,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE;MACZ,CAAC;MACDC,UAAU,EAAE,EAAE;MACdC,aAAa,EAAE;IACjB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,aAAaA,CAAA,EAAG;MACd,MAAMC,EAAC,GAAI,4BAA4B;MACvC,IAAI,CAACA,EAAE,CAACC,IAAI,CAAC,IAAI,CAACR,IAAI,CAACC,KAAK,CAAC,EAAE;QAC7B,IAAI,CAACE,UAAS,GAAI,iCAAiC;MACrD,OAAO;QACL,IAAI,CAACA,UAAS,GAAI,EAAE;MACtB;IACF,CAAC;IACDM,gBAAgBA,CAAA,EAAG;MACjB,IAAI,IAAI,CAACT,IAAI,CAACE,QAAQ,CAACQ,MAAK,GAAI,CAAC,EAAE;QACjC,IAAI,CAACN,aAAY,GAAI,qDAAqD;MAC5E,OAAO;QACL,IAAI,CAACA,aAAY,GAAI,EAAE;MACzB;IACF,CAAC;IACDO,UAAUA,CAAA,EAAG;MACX,IAAI,CAACL,aAAa,CAAC,CAAC;MACpB,IAAI,CAACG,gBAAgB,CAAC,CAAC;MACvB,IAAI,IAAI,CAACN,UAAS,IAAK,IAAI,CAACC,aAAa,EAAE;QACzC;MACF;MACAX,YAAY,CAAC,CAAC,CAACmB,IAAI,CAAC,MAAI;QAGpBvB,KAAK,CAACwB,IAAI,CAAC,YAAY,EAAE,IAAI,CAACb,IAAI,CAAC,CAACY,IAAI,CAACE,QAAO,IAAK;UAErD,MAAMC,KAAI,GAAID,QAAQ,CAACf,IAAI,CAACgB,KAAK;;UAEjC;UACA;UACA1B,KAAK,CAACC,QAAQ,CAAC0B,OAAO,CAACC,MAAM,CAAE,eAAc,IAAK,UAASF,KAAM,EAAC;UAElEG,KAAK,CAAC,oBAAoB,CAAC;UAC3B,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,aAAa,CAAC;QAChC,CAAC,EACAC,KAAK,CAAC1B,KAAI,IAAK;UAChBC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;UAC5CuB,KAAK,CAACvB,KAAK,CAACmB,QAAQ,CAACf,IAAI,CAACuB,OAAO,CAAC;QAClC,CAAC,CAAC;MAGN,CAAC;IAEH;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}